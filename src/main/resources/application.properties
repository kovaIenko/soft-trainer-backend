spring.datasource.url=jdbc:postgresql://${SOFT_TRAINER_BACKEND_DB_URL:localhost:5432}/${POSTGRES_DB:postgres}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:1q2w3e4r5t6y7u}

spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate configuration
# Removed explicit dialect to fix warning - Hibernate auto-detects PostgreSQL dialect
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

 #Enable logging of SQL statements
#spring.jpa.show-sql=true
#
## Format the SQL logs for better readability
#spring.jpa.properties.hibernate.format_sql=true

#spring.jpa.properties.hibernate.use_sql_comments=true
#spring.jpa.properties.hibernate.type=trace
#
#logging.level.org.hibernate.SQL=INFO
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
#logging.level.ROOT=INFO
#logging.level.org.springframework.orm.jpa=DEBUG
#logging.level.org.springframework.transaction=DEBUG
#
spring.jpa.hibernate.ddl-auto=${SOFT_TRAINER_DDL_UPDATE:none}

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.locations=classpath:db/migration
logging.level.org.flywaydb=WARN

#server.port: 8443
#server.ssl.key-store: keystore.p12
#server.ssl.key-store-password: 123456
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://accounts.google.com
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.resourceserver.jwt.jws-algorithms: HS384

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email

#rsa keys
rsa.private-key=classpath:certs/private.pem
rsa.public-key=classpath:certs/public.pem

security.enabled=${SOFT_TRAINER_SECURITY_ENABLED:true}

spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Gmail SMTP Settings
mail.smtp.auth=true
mail.smtp.starttls.enable=true
mail.smtp.host=smtp.gmail.com
mail.smtp.port=587

# Gmail Credentials
mail.username=ruskov004@gmail.com
mail.password=kljn ssuk gpxv ttej

# List of recipient emails (comma-separated)
mail.recipients=ruskov004@gmail.com,aliskachenko@gmail.com

# Telegram Bot Settings
telegram.bot-token=7819887881:AAEnDD6yxPmU4E8KRafGG5J0f04t0X2TMsI
telegram.bot-username=softtrainer_notification_bot
telegram.chat-id=288577642
telegram.enabled=false

# AI Agent Configuration
app.ai-agent.base-url=http://localhost:8000
#http://16.171.20.54:8000
app.ai-agent.enabled=true

# ============== Enhanced AI Processing Configuration ==============

# Enhanced AI Agent Integration
app.ai-agent.enhanced-import.enabled=true
app.ai-agent.enhanced-processing.enabled=true
app.ai-agent.enhanced-processing.rollout-percentage=25
app.ai-agent.enhanced-processing.force-enhanced=false
app.ai-agent.enhanced-processing.organization-whitelist=

# Enhanced Message Types
app.enhanced-messages.rich-text.enabled=true
app.enhanced-messages.ai-generation.enabled=true
app.enhanced-messages.interactive-elements.enabled=true
app.enhanced-messages.media-support.enabled=true

# Phase 2 Features
app.phase2.message-completeness.enabled=true
app.phase2.advanced-interactions.enabled=true

# AI Agent Configuration
# Increase timeouts to accommodate LLM API calls (typically 3-6 seconds) plus processing time
app.ai-agent.timeout.connect=5000
app.ai-agent.timeout.read=20000
app.ai-agent.retry.max-attempts=3
app.ai-agent.retry.backoff-ms=500

# ============== LOGGING CONFIGURATION ==============

# Root logging level
logging.level.root=INFO

# Application specific logging levels
logging.level.com.backend.softtrainer=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN

# Error and warning logging levels for specific areas
logging.level.com.backend.softtrainer.services.AiAgentService=DEBUG
logging.level.com.backend.softtrainer.simulation.engine=DEBUG
logging.level.com.backend.softtrainer.controllers=DEBUG

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.locations=classpath:db/migration
logging.level.org.flywaydb=WARN

# Disable specific warnings we're going to fix
spring.jpa.open-in-view=false

# ============== FILE LOGGING CONFIGURATION ==============

# Main application log
logging.file.name=logs/application.log
logging.file.max-size=10MB
logging.file.max-history=30

# Error-specific logging pattern
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Console logging pattern (less verbose for development)
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{20} - %msg%n

# ============== REST OF CONFIGURATION ==============

